---
# Monitoring Stack Setup Playbook
# Installs and configures Prometheus, Grafana, and Node Exporter

- name: Setup Monitoring Stack
  hosts: monitoring
  become: yes
  gather_facts: yes
  
  vars:
    prometheus_version: "2.45.0"
    grafana_version: "10.0.0"
    node_exporter_version: "1.6.0"
    prometheus_port: 9090
    grafana_port: 3000
    node_exporter_port: 9100
    
  tasks:
    # Node Exporter Setup
    - name: Create prometheus user
      user:
        name: prometheus
        system: yes
        shell: /bin/false
        
    - name: Download Node Exporter
      unarchive:
        src: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
        dest: /tmp
        remote_src: yes
        
    - name: Install Node Exporter
      copy:
        src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter"
        dest: /usr/local/bin/node_exporter
        mode: '0755'
        remote_src: yes
        
    - name: Create Node Exporter systemd service
      copy:
        dest: /etc/systemd/system/node_exporter.service
        content: |
          [Unit]
          Description=Node Exporter
          After=network.target
          
          [Service]
          User=prometheus
          Group=prometheus
          Type=simple
          ExecStart=/usr/local/bin/node_exporter
          
          [Install]
          WantedBy=multi-user.target
          
    - name: Start Node Exporter
      systemd:
        name: node_exporter
        state: started
        enabled: yes
        daemon_reload: yes
        
    # Prometheus Setup
    - name: Create Prometheus directories
      file:
        path: "{{ item }}"
        state: directory
        owner: prometheus
        group: prometheus
      loop:
        - /etc/prometheus
        - /var/lib/prometheus
        
    - name: Download Prometheus
      unarchive:
        src: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
        dest: /tmp
        remote_src: yes
        
    - name: Install Prometheus binaries
      copy:
        src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/{{ item }}"
        dest: "/usr/local/bin/{{ item }}"
        mode: '0755'
        owner: prometheus
        group: prometheus
        remote_src: yes
      loop:
        - prometheus
        - promtool
        
    - name: Configure Prometheus
      copy:
        dest: /etc/prometheus/prometheus.yml
        content: |
          global:
            scrape_interval: 15s
            evaluation_interval: 15s
          
          scrape_configs:
            - job_name: 'prometheus'
              static_configs:
                - targets: ['localhost:{{ prometheus_port }}']
            
            - job_name: 'node'
              static_configs:
                - targets: ['localhost:{{ node_exporter_port }}']
            
            - job_name: 'vapor'
              static_configs:
                - targets: ['localhost:8080']
              metrics_path: '/metrics'
              
    - name: Create Prometheus systemd service
      copy:
        dest: /etc/systemd/system/prometheus.service
        content: |
          [Unit]
          Description=Prometheus
          After=network.target
          
          [Service]
          User=prometheus
          Group=prometheus
          Type=simple
          ExecStart=/usr/local/bin/prometheus \
            --config.file /etc/prometheus/prometheus.yml \
            --storage.tsdb.path /var/lib/prometheus/ \
            --web.console.templates=/etc/prometheus/consoles \
            --web.console.libraries=/etc/prometheus/console_libraries
          
          [Install]
          WantedBy=multi-user.target
          
    - name: Start Prometheus
      systemd:
        name: prometheus
        state: started
        enabled: yes
        daemon_reload: yes
        
    # Grafana Setup
    - name: Add Grafana GPG key
      apt_key:
        url: https://packages.grafana.com/gpg.key
        state: present
      when: ansible_os_family == "Debian"
      
    - name: Add Grafana repository
      apt_repository:
        repo: "deb https://packages.grafana.com/oss/deb stable main"
        state: present
      when: ansible_os_family == "Debian"
      
    - name: Install Grafana
      package:
        name: grafana
        state: present
        
    - name: Configure Grafana datasource
      copy:
        dest: /etc/grafana/provisioning/datasources/prometheus.yml
        content: |
          apiVersion: 1
          datasources:
            - name: Prometheus
              type: prometheus
              access: proxy
              url: http://localhost:{{ prometheus_port }}
              isDefault: true
              
    - name: Start Grafana
      systemd:
        name: grafana-server
        state: started
        enabled: yes
        
    - name: Wait for services to be ready
      wait_for:
        port: "{{ item }}"
        host: localhost
        delay: 5
      loop:
        - "{{ prometheus_port }}"
        - "{{ grafana_port }}"
        - "{{ node_exporter_port }}"
        
    - name: Display access information
      debug:
        msg: 
          - "Prometheus: http://{{ ansible_default_ipv4.address }}:{{ prometheus_port }}"
          - "Grafana: http://{{ ansible_default_ipv4.address }}:{{ grafana_port }} (admin/admin)"
          - "Node Exporter: http://{{ ansible_default_ipv4.address }}:{{ node_exporter_port }}/metrics"
