stages:
  - build
  - deploy

variables:
  PATH_NAME: "awanio/vapor-api"
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_TLS_VERIFY: 1
  DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
  GIT_DEPTH: 1

default:
  before_script:
    - |-
        timeout=60
        passed=0
        echo "Waiting for docker daemon to be fully started"
        until [ -f "${DOCKER_CERT_PATH}/ca.pem" ] || [ ${timeout} -lt ${passed} ]; do
          echo -n "."
          passed=`expr $passed + 1`
          sleep 1
        done

build:
  stage: build
  image:
    name: docker:19.03.12
  services:
    - name: docker:20.10-dind
  script:
    - >
      docker build 
      -t $ACR_HOST/$PATH_NAME:$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA 
      -f $CI_PROJECT_DIR/Dockerfile 
      $CI_PROJECT_DIR 
    - mkdir ~/build
    - >
      docker run -d -v ~/build:/build 
      --name vapor 
      --rm 
      $ACR_HOST/$PATH_NAME:$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA 
      /bin/sh -c "tail -F /dev/null" 
    - docker cp vapor:/root/vapor ~/build/
    - docker stop vapor
    - ls -lah ~/build
    - chmod +x ~/build/vapor
    - cp -r ./openapi.yaml ./ansible ~/build/ 
    - tar -czvf vapor-linux-amd64.tar.gz ~/build
    - cat $MC_CLIENT > mc-client.sh
    - chmod +x ./mc-client.sh
    - ./mc-client.sh
    - ./mc cp vapor-linux-amd64.tar.gz awid5/assets/vapor/latest
    - ./mc cp ./scriptss/deploy.sh awid5/assets/vapor/latest
  only:
    - dev
    - main
  tags:
    - idch-bg-awid1

build:docs:
  stage: build
  image:
    name: docker:19.03.12
  services:
    - name: docker:20.10-dind
  script:
    - cat ${CONTAINER_BUILD_N_PUSH} > build.sh
    - chmod +x ./build.sh
    - ./build.sh
  only:
    - dev
    - main
  tags:
    - idch-bg-awid1
    
deploy:docs:
  image: cimg/base:edge-22.04
  stage: deploy
  dependencies: []
  only:
    - main
  tags:
    - idch-bg-awid1
  script:
    - cat ${DEPLOY_DOCS_WEB} > deploy.sh
    - chmod +x ./deploy.sh
    - ./deploy.sh
