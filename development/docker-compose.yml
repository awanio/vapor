version: '3.8'

services:
  vapor-api:
    build:
      context: ..
      dockerfile: development/Dockerfile.dev
    container_name: vapor-api-dev
    hostname: vapor-dev
    # Run with privileged mode to allow system management operations
    privileged: true
    # Required for systemd to work properly
    cgroup: host
    pid: host
    ipc: host
    volumes:
      # Mount source code for live development
      - ../cmd:/app/cmd:ro
      - ../internal:/app/internal:ro
      - ../web:/app/web:ro
      - ../go.mod:/app/go.mod:ro
      - ../go.sum:/app/go.sum:ro
      # Persistent storage for testing
      - storage-test:/mnt/test-storage
      # Share certificates from dind service
      - dind-certs-client:/certs/client:ro
      # Persistent journal logs
      - journal:/var/log/journal
      # Persistent LVM metadata
      - lvm-data:/etc/lvm
      # Persistent iSCSI configuration
      - iscsi-config:/etc/iscsi
      # Persistent multipath configuration
      - multipath-config:/etc/multipath
    environment:
      - JWT_SECRET=development-secret-change-in-production
      - SERVER_ADDR=:8080
      - GO_ENV=development
      # Enable debug logging
      - DEBUG=true
      # System user for testing (will be created in container)
      - TEST_USER=vapor
      - TEST_PASSWORD=vapor123
      # Docker host pointing to dind service
      - DOCKER_HOST=tcp://dind:2376
      - DOCKER_TLS_VERIFY=1
      - DOCKER_CERT_PATH=/certs/client
    # Note: Devices are created within the container by the entrypoint script
    # No need to mount host /dev
    cap_add:
      # Add all capabilities for system management
      - ALL
    security_opt:
      # Disable security options that might interfere with system management
      - apparmor:unconfined
      - seccomp:unconfined
      - label:disable
    tmpfs:
      # Temporary filesystems for systemd
      - /run/lock
    stdin_open: true
    tty: true
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - dind
    networks:
      - default

  # Docker-in-Docker service for container management
  dind:
    image: docker:24-dind
    container_name: vapor-dind-dev
    privileged: true
    environment:
      - DOCKER_TLS_CERTDIR=/certs
    volumes:
      - dind-storage:/var/lib/docker
      - dind-certs-ca:/certs/ca
      - dind-certs-client:/certs/client
    ports:
      - "2376:2376"
    networks:
      - default
    restart: unless-stopped

  # Kubernetes API server simulator for testing K8s features
  k3s:
    image: rancher/k3s:latest
    container_name: vapor-k3s-dev
    privileged: true
    environment:
      - K3S_KUBECONFIG_MODE=666
      - K3S_TOKEN=vapor-dev-token
    volumes:
      - k3s-data:/var/lib/rancher/k3s
      - ../kubeconfig:/output
    ports:
      - "6443:6443"
    command: server --disable-agent --no-deploy traefik
    restart: unless-stopped

  # iSCSI target for testing iSCSI features
  iscsi-target:
    image: davidecavestro/iscsi-target
    container_name: vapor-iscsi-dev
    privileged: true
    volumes:
      - iscsi-data:/iscsi
    environment:
      - TARGET_IQN=iqn.2024-01.io.vapor:storage.test
      - TARGET_PORTAL=0.0.0.0:3260
      - INITIATOR_USERID=vapor
      - INITIATOR_PASSWORD=vapor123
    ports:
      - "3260:3260"
    restart: unless-stopped


volumes:
  storage-test:
    driver: local
  k3s-data:
    driver: local
  iscsi-data:
    driver: local
  journal:
    driver: local
  lvm-data:
    driver: local
  iscsi-config:
    driver: local
  multipath-config:
    driver: local
  dind-storage:
    driver: local
  dind-certs-ca:
    driver: local
  dind-certs-client:
    driver: local

networks:
  default:
    name: vapor-dev-network
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
          gateway: 172.28.0.1
